;; This is an example configuration file for pter.
;; All values presented here are the default values.

[General]
;; Whether or not to use colors.
;; You should not have to change this only because your terminal does not
;; support colors because that case should automatically be detected.
;; If you'd rather not use colors, change to 'no'.
;use-colors = yes

;; Whether or not to show numbers for tasks
;show-numbers = yes

;; Keep at this amount of tasks between the selected task and the top or
;; bottom edge of the terminal.
;scroll-margin = 5

;; Whether or not the search should be case-sensitive
;search-case-sensitive = yes

;; Save changes to the edited files in a save manner.
;; When enabled changes to the edited file are saved to another file in the
;; same folder first and then moved into place of the actual file.
;; This might be problematic if your file is a folder that's synchronised
;; via DropBox or similar cloud storage services.
;safe-save = yes

;; Human-friendly dates
;; Display relative dates (like 'tomorrow', '2 weeks ago') instead of
;; YYYY-MM-DD formatted dates for some (t, due, created, completed) or 'all'
;; dates. By default there is no friendliness to humans.
;human-friendly-dates =

;; The format of each task line
;; Please have a look at the documentation for the details on how to
;; define your own task-format and what fields exist.
;task-format = {selection: >} {nr: >} {done} {tracking }{due }{(pri) }{description}

;; Contexts to remove when marking a task as done
;; When marking a task as done, you might want to automatically remove contexts.
;; In that case you can define them here separated by comma.
;; For example:
;;   clear-contexts = in, today
;; No contexts are removed by default:
;clear-contexts =

;; The default t: search value
;; Even if the search field is empty, the search will adhere to this t: filter
;; value. That means by default tasks are hidden that have a threshold in the future.
;default-threshold = today

;; Marker to add to a task when delegating it
;delegation-marker = @delegated

;; Action to trigger when delegating a task
;; This can be changed to 'mail-to' to compose an email with the task text in the
;; subject when you click the shortcut to delegate a task.
;delegation-action = none

;; What attribute to consider the recipient(s) of delegated tasks
;; If you want to define the recipients of delegated tasks differently than by "to:"
;; you can override the name of the attribute here:
;delegation-to = to

;; What external text editor to use
;; There is no default here, which means pter will attempt to use the editors specified in
;; your VISUAL or EDITOR environment variables.
;; They are ignored though, if you specify anything here.
;editor =

;; What external program to use for viewing notes
;; If nothing is provided here, pter will try to use 'less' or 'more'
;viewer =

;; Whether or not to always add the creation date to a task
;; You can set this to "no" if you don't like the creation date added to every task
;; automatically.
;add-creation-date = yes

;; What protocols are considered when opening URLs of a task
;protocols = http, https, mailto, ftp, ftps

;; Whether or not to automatically create IDs when creating tasks.
;auto-id = no

;; Whether or not to hide tasks that have uncompleted preceding tasks.
;hide-sequential = yes

;; Info messages at the bottom of the screen in the TUI will disappear
;; after this timeout (in seconds).
;info-timeout = 5

;; Whether or not to show a completion menu for contexts and projects in the
;; task editor and the search field.
;use-completion = yes

;; What behaviour should pter have when deleting tasks.
;; Options are 'disabled', 'trash', and 'permanent'.
;; Beware that the 'delete-task' function is not enabled by default.
;delete-is = disabled

;; Where to store deleted tasks.
;; This option only applies whene 'delete-is' is set to 'trash'.
;trash-file = ~/.config/pter/trash.txt

;; Whether or not to reuse the same task as the follow-up
;; when completing a recurring task.
;reuse-recurring = no

;; How the archive functionality behaves
;; Options are:
;; relative (archive is relative to the todo.txt file),
;; centralised (one archive for all your todo.txt files),
;; disabled (archiving is disabled)
;archive-is = centralised

;; Where your archive file is, if 'archive-is' is set to 'centralised'
archive-file = ~/Dropbox/todo/archive.txt

;; If you want to save the original todo.txt of an archived task
;; set this option to some value, like 'origin'
;archive-origin-marker =

;; If you did set the 'archive-origin-marker', you can set this
;; option to 'name' or 'stem' to save the original file name or
;; only the stem (name without the file extension) in the archive
;archive-origin-is = full-path

;; What the 'done' functionality should do
;; Options are:
;; mark (mark the task as done),
;; move (move the task to the done file),
;; mark-move (mark the task as done and move to done file)
;done-is = mark

;; Where the file is that stores all completed tasks
;; if you are using the done-is option with 'move' or 'mark-move'
;done-file = ~/.config/pter/done.txt

;; How pter determines the filename of a task's note
;; Options are:
;; user-input (you will be asked for a filename),
;; auto (the task's ID will be taken; an ID might be added if necessary),
;; cancel (cancel task note editing if no note is defined)
;note-naming = user-input

;; Filename suffix for notes, if a suffix is not provided
;note-suffix = .txt

;; Where the notes for the tasks are stored. You may provide multiple
;; paths here (separate with newlines). When creating notes, only the
;; first path will be used
;notes =

;; Default sort order when not changed in search
;sort-order = completed,due_in,priority,linenr

;; Reduce distractions,
;; ie. hide the task list when editing or creating a new task
;reduce-distraction = no

;; Esc-timeout controls how long in ms the terminal should wait before
;; an 'Esc' key is considered a stand-alone 'Esc' and not a key sequence
;esc-timeout = 200

;; This is an optional work-around to prevent mouse-wheel interaction
;; in pter's task list
;reset-terminal = no

;; Your custom list of actions you want to see in the help bar at the
;; bottom of the terminal.
;help-actions =
;    show-help
;    quit
;    edit-task
;    create-task
;    search
;    load-search
;    save-search
;    toggle-done
;    jump-to
;    next-item
;    prev-item
;    edit-note


[Symbols]
;; This text will be shown to indicate the selected task in the list.
;; If this is left empty but your terminal does not support colors pter
;; will show a ">" to indicate the selected task.
;selection =

;; This will be used to indicate tasks that are marked done
;done = [x]

;; This will be used to indicate tasks that are not marked done
;not-done = [ ]

;; This will be shown on the right side of text that expands further than
;; can be shown.
;overflow-right = →

;; This will be shown on the left side of text that expands further than
;; can be shown.
;overflow-left = ←

;; Show this if a task has a due-date in the past.
;overdue = !!

;; Show this if a task has a due-date that is today.
;due-today = !

;; Show this if a task has a due-date that is tomorrow.
;due-tomorrow = *

;; This symbol indicates that a task is being tracked (has the tracking: tag).
;tracking = @


;; Here is the default key mapping for the task list
[Keys]
;q = quit
;<down> = next-item
;j = next-item
;<up> = prev-item
;k = prev-item
;<pgup> = page-up
;<pgdn> = page-down
;<home> = first-item
;<end> = last-item
;<colon> = jump-to
;/ = search
;c = search-context
;p = search-project
;l = load-search
;s = save-search
;u = open-url
;t = toggle-tracking
;<return> = select-item
;^C = cancel
;<escape> = cancel
;^L = refresh-screen
;^R = reload-tasks
;? = show-help
;% = archive
;Y = to-clipboard

;; No default mapping list
; = delete-task


;; This is the default key mapping for edit fields
[Editor:Keys]
;^C = cancel
;<escape> = cancel
;<return> = submit-input
;<left> = go-left
;<right> = go-right
;<home> = go-bol
;<end> = go-eol
;<backspace> = del-left
;<del> = del-right
;^U = del-to-bol

;; Color definitions are done in pairs: foreground, background; both being
;; numeric values.
;; The background is optional (except for the 'normal' color definition).
;; Color definitions for attributes that are used to display tasks have a
;; second version with the sel- prefix to indicate the color code for the
;; color when the item is selected. The sel- variant is always optional.
[Colors]
;; Normal text, borders, and edit field colors (supports sel- variant)
;normal = 7, 0

;; Selected normal text
;sel-normal = 0, 7

;; Inactive text
;inactive = 8

;; The help text at the bottom of the screen
;help = 11, 8

;; The highlighting of the key in the help
;help-key = 2, 8

;; Error text
;error = 1

;; Overflow symbol coloring (supports sel- variant)
;overflow = 11

;; Signal that a task is being tracked, ie. has the tracking tag (supports
;; sel- variant)
;tracking = 7, 2
;sel-tracking = 2, 7

;; Priorities A through D of tasks (supports sel- variant)
;pri-a = 1
;pri-b = 3
;pri-c = 6
;pri-d = 9

;; Highlighting of contexts (supports sel- variant)
;context = 4

;; Highlighting of projects (supports sel- variant)
;project = 2

;; Tasks that have a due-date in the past (supports sel- variant)
;overdue = 7, 1
;sel-overdue = 1, 7

;; Tasks that have a due-date that is today (supports sel- variant)
;due-today = 4

;; Tasks that have a due-date that is tomorrow (supports sel- variant)
;due-tomorrow = 6


[Highlight]
;; Here you can provide your own contextual highlighting of tags,
;; like due: or t:
;; There are no default highlights defined for these, but an example could
;; be to highlight the 'due' tag with red text:
;; due = 1
;; or hide the 't' tag by making the text the same color as the background:
;; t = 0
;; sel-t = 7


;; Functions of the GUI can be assigned to shortcuts.
[GUI:Keys]
;quit = Ctrl+Q
;open-manual = F1
;open-file =
;search = Ctrl+F
;named-search = F8
;focus-tasks = F6
;new = Ctrl+N
;new-related =
;new-subsequent =
;edit = Ctrl+E
;toggle-done = Ctrl+D
;toggle-tracking = Ctrl+T
;toggle-hidden = Ctrl+H
;delegate = Ctrl+G
;; Dark mode requires qdarkstyle to be installed
;toggle-dark-mode = 


;; General options for the GUI version
[GUI]
;; Name of the font to use for the task list
;font =

;; Font size for the task list
;font-size =

;; Whether or not to allow multiple instances of qpter
;; By default qpter may only be started once.
;single-instance = yes

;; This controls whether links, contexts, and projects are
;; clickable in the list of tasks. Disabling this option
;; may improve performance.
;clickable = yes

;; At what time to reload the tasks when a new day starts.
;; The format is HH:MM.
;daily-reload = 00:00

;; Color definitions for GUI accept 3-digits hex codes (eg. '#f00'), 6-digits
;; hex codes (eg. '#0b1cff'), or HTML color names like 'red'.
[GUI:Colors]
;normal =
;done = #9e9e9e
;overdue = #bf360c
;due-today = #f57f17
;due-tomorrow = #827717
;project = #00695c
;context = #1565c0
;tracking = #388e3c
;pri-a = #bf360c
;pri-b = #e65100
;pri-c = #ff6f00
;pri-d = #00695c
;url = #4527a0


[GUI:Highlight]
;; Here you can provide your own contextual highlighting of tags,
;; like due: or t:
;; There are no default highlights defined for these, but an example could
;; be to highlight the 'due' tag with red text:
;; due = #f00

